Linked List Group Reverse
Solution:
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None


class Solution:
    def reverseKGroup(self, head, k):
        if not head:
            return None
        
        curr = head
        prev = None
        count = 0
        
        # Step 1: Reverse first k nodes
        while curr and count < k:
            next_node = curr.next
            curr.next = prev
            prev = curr
            curr = next_node
            count += 1
        
        # Step 2: Now prev = new head of this group
        # Recursively reverse next groups
        if curr:
            head.next = self.reverseKGroup(curr, k)
        
        return prev
